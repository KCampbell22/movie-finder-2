[{"/Users/kadecampbell/movie-finder-2/src/index.js":"1","/Users/kadecampbell/movie-finder-2/src/App.js":"2","/Users/kadecampbell/movie-finder-2/src/reportWebVitals.js":"3","/Users/kadecampbell/movie-finder-2/src/Home.js":"4","/Users/kadecampbell/movie-finder-2/src/utils.js":"5","/Users/kadecampbell/movie-finder-2/src/Movie.js":"6"},{"size":500,"mtime":1672250061067,"results":"7","hashOfConfig":"8"},{"size":679,"mtime":1672251770130,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1672234734044,"results":"10","hashOfConfig":"8"},{"size":2709,"mtime":1672249789779,"results":"11","hashOfConfig":"8"},{"size":252,"mtime":1672237688808,"results":"12","hashOfConfig":"8"},{"size":1616,"mtime":1672250175219,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"87vo3a",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/Users/kadecampbell/movie-finder-2/src/index.js",[],[],"/Users/kadecampbell/movie-finder-2/src/App.js",[],[],"/Users/kadecampbell/movie-finder-2/src/reportWebVitals.js",[],[],[],"/Users/kadecampbell/movie-finder-2/src/Home.js",["35"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//react-dom/client\nimport { json, checkStatus } from \"./utils\";\n\nconst Movie = (props) => {\n  const { Title, Year, imdbID, Type, Poster } = props.movie;\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-4 col-md-2 col-lg-1 mb-3\">\n        <Link to={`/movie/${imdbID}/`}>\n          <img src={Poster} className=\"img-fluid\" />\n        </Link>\n      </div>\n      <div className=\"col-8 col-md-10 col-lg-11 mb-3\">\n        <Link to={`/movie/${imdbID}/`}>\n          <h4>{Title}</h4>\n          <p>\n            {Type} | {Year}\n          </p>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nclass MovieFinder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: \"\",\n      results: [],\n      error: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let { searchTerm } = this.state;\n    searchTerm = searchTerm.trim();\n    if (!searchTerm) {\n      return;\n    }\n\n    fetch(`https://www.omdbapi.com/?s=${searchTerm}&apikey=df77ea71`)\n      .then(checkStatus)\n      .then(json)\n      .then((data) => {\n        if (data.Response === \"False\") {\n          throw new Error(data.Error);\n        }\n\n        if (data.Response === \"True\" && data.Search) {\n          console.log(data);\n          this.setState({ results: data.Search, error: \"\" });\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: error.message });\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { searchTerm, results, error } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <form onSubmit={this.handleSubmit} className=\"form-inline my-4\">\n              <input\n                type=\"text\"\n                className=\"form-control mr-sm-2\"\n                placeholder=\"frozen\"\n                value={searchTerm}\n                onChange={this.handleChange}\n              />\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n            {(() => {\n              if (error) {\n                return error;\n              }\n              return results.map((movie) => {\n                return <Movie key={movie.imdbID} movie={movie} />;\n              });\n            })()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieFinder;\n","/Users/kadecampbell/movie-finder-2/src/utils.js",[],[],"/Users/kadecampbell/movie-finder-2/src/Movie.js",["36"],[],"import React from \"react\";\nimport { json, checkStatus } from \"./utils\";\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: null,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      `https://www.omdbapi.com/?i=${this.props.match.params.id}&apikey=b7da8d63`\n    )\n      .then(checkStatus)\n      .then(json)\n      .then((data) => {\n        if (data.Response === \"False\") {\n          throw new Error(data.Error);\n        }\n\n        if (data.Response === \"True\") {\n          console.log(data);\n          this.setState({ movie: data, error: \"\" });\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: error.message });\n        console.log(error);\n      });\n  }\n\n  render() {\n    if (!this.state.movie) {\n      return null;\n    }\n\n    const { Title, Year, Plot, Director, imdbRating, Poster } =\n      this.state.movie;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row pt-5\">\n          <div className=\"col-6\">\n            <h1>{Title}</h1>\n            <ul className=\"list-unstyled\">\n              <li>\n                <p>Year: {Year}</p>\n              </li>\n              <li>\n                <p>Director: {Director}</p>\n              </li>\n              <li>\n                <p>Plot: {Plot}</p>\n              </li>\n              <li>\n                <p>imdbRating: {imdbRating} / 10</p>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-6\">\n            <img src={Poster} className=\"img-fluid\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n",{"ruleId":"37","severity":1,"message":"38","line":14,"column":11,"nodeType":"39","endLine":14,"endColumn":53},{"ruleId":"37","severity":1,"message":"38","line":63,"column":13,"nodeType":"39","endLine":63,"endColumn":55},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]